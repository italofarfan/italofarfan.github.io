<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Italo Farfán Vera</title><link>http://italofarve.github.io/</link><description></description><atom:link href="http://italofarve.github.io/feeds/italo-farfan-vera.rss.xml" rel="self"></atom:link><lastBuildDate>Mon, 06 Apr 2015 21:07:00 +0200</lastBuildDate><item><title>Paquetes Python para ciencia e ingeniería con Anaconda</title><link>http://italofarve.github.io/posts/2015/04/06/paquetes-python-con-anaconda.html</link><description>&lt;h2&gt;Introducción&lt;/h2&gt;
&lt;p&gt;Si estás utilizando Scikit-learn, Pandas u otro paquete de Python para ingeniería o ciencia sabrás que es una pérdida de tiempo estar buscando y descargando los paquetes que deseas instalar. Además de tener en cuenta la compatibilidad entre paquetes. Para evitar problemas usamos herramientas como VirtualEnv (para crear entornos virtuales y trabajar con distintas versiones de librerías) y PIP (para instalar paquetes).&lt;/p&gt;
&lt;p&gt;La buena noticia es que existe Anaconda,  que nos permite instalar paquetes y gestionar entornos virtuales fácilmente, además de tener otras ventajas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ahorro de tiempo al instalar paquetes adicionales requeridos.&lt;/li&gt;
&lt;li&gt;Tiene un administrador de paquetes y gestor de entornos virtuales.&lt;/li&gt;
&lt;li&gt;No necesitas permisos de administrador.&lt;/li&gt;
&lt;li&gt;Multiplataforma (Windows, Mac y Linux).&lt;/li&gt;
&lt;li&gt;Es completamente gratuita, incluso para uso comercial y redistribución.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ahora pasemos a definir Anaconda, ver la instalación, creación de entornos virtuales y conocer otros comandos básicos.&lt;/p&gt;
&lt;h2&gt;¿Qué es Anaconda?&lt;/h2&gt;
&lt;p&gt;Anaconda es una distribución de Python multiplataforma, desarrollada por &lt;a href="http://continuum.io/"&gt;Continuum Analytics&lt;/a&gt;. Contiene una gran colección de paquetes y librerías para análisis de datos, computación científica e ingeniería. Si no deseas descargar la distribución completa (por tener un ancho de banda reducido, ...) puedes optar por &lt;strong&gt;Miniconda&lt;/strong&gt;, que contiene solamente el gestor de paquetes Conda y Python para luego instalar lo que necesites.&lt;/p&gt;
&lt;h2&gt;Instalando Miniconda&lt;/h2&gt;
&lt;p&gt;Descarga la versión que desees:
&lt;em&gt; Conda: http://continuum.io/downloads
&lt;/em&gt; Miniconda: http://conda.pydata.org/miniconda.html&lt;/p&gt;
&lt;p&gt;Yo he descargado &lt;code&gt;Miniconda3-latest-Linux-x86_64.sh&lt;/code&gt;,  Miniconda Python 3.4 64-bit(bash installer) y guardado en la carpeta &lt;code&gt;Donwloads&lt;/code&gt;. Se recomienda usar Python 3, &lt;a href="http://www.getpython3.com/"&gt;que es el presente y futuro de Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Abrimos un terminal (Ctrl + Alt + t), vamos a la carpeta donde hemos guardado el instalador (en mi caso &lt;code&gt;Downloads&lt;/code&gt;) y procedemos con la instalación.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;Downloads
bash Miniconda3-latest-Linux-x86_64.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Nos aparecerá un mensaje de bienvenida, presionamos enter y nos saldrá la licencia. Para dejar de leerla presiona &lt;code&gt;Crtl + c&lt;/code&gt; y para aceptar las condiciones escribimos "yes".&lt;/p&gt;
&lt;p&gt;&lt;img alt="Instalando Miniconda" src="http://italofarve.github.io/images/instalando-miniconda.png" /&gt;&lt;/p&gt;
&lt;p&gt;Nos quedarán dos preguntas más por responder, en mi caso he presionado "enter" y escrito "yes". Finalmente para activar los cambios abre un nuevo terminal. Abajo puedes ver como he respondido:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Miniconda3 will now be installed into this location:
/home/italo/miniconda3

  - Press ENTER to confirm the location
  - Press CTRL-C to abort the installation
  - Or specify a different location below

&lt;span class="o"&gt;[&lt;/span&gt;/home/italo/miniconda3&lt;span class="o"&gt;]&lt;/span&gt; &amp;gt;&amp;gt;&amp;gt;
&lt;span class="nv"&gt;PREFIX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/italo/miniconda3
installing: python-3.4.2-0 ...
installing: conda-env-2.1.3-py34_0 ...
installing: openssl-1.0.1k-0 ...
installing: pycosat-0.6.1-py34_0 ...
installing: pyyaml-3.11-py34_0 ...
installing: readline-6.2-2 ...
installing: requests-2.5.3-py34_0 ...
installing: sqlite-3.8.4.1-0 ...
installing: system-5.8-1 ...
installing: tk-8.5.15-0 ...
installing: xz-5.0.5-0 ...
installing: yaml-0.1.4-0 ...
installing: zlib-1.2.8-0 ...
installing: conda-3.9.1-py34_0 ...
Python 3.4.2 :: Continuum Analytics, Inc.
creating default environment...
installation finished.
Do you wish the installer to prepend the Miniconda3 install location
to PATH in your /home/italo/.bashrc ? &lt;span class="o"&gt;[&lt;/span&gt;yes|no&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;no&lt;span class="o"&gt;]&lt;/span&gt; &amp;gt;&amp;gt;&amp;gt; yes

Prepending &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/italo/miniconda3/bin to PATH in /home/italo/.bashrc
A backup will be made to: /home/italo/.bashrc-miniconda3.bak


For this change to become active, you have to open a new terminal.

Thank you &lt;span class="k"&gt;for &lt;/span&gt;installing Miniconda3!
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Actualizando Conda&lt;/h2&gt;
&lt;p&gt;Primero, abrimos un nuevo terminal y verificamos si la instalación ha sido correcta.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;conda -V
conda 3.9.1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Otra forma:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;conda info
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Actualizando Conda:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;conda update conda
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Entornos virtuales&lt;/h2&gt;
&lt;p&gt;Ver los entornos que tenemos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;conda info -e
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Nos mostrará los entornos creados. Yo tengo dos: django y root. El símbolo * indica en que entorno estamos. Cuando instalas Anaconda el entorno por defecto (default) será root.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# conda environments:&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
django                   /home/italo/miniconda3/envs/django
root                  *  /home/italo/miniconda3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Crear un entorno. Por ejemplo llamado django y utilizando Python 3:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;conda create -n django python
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Crear un entorno usando python 2. La versión de un paquete se indica con el signo "=". &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;conda create -n django &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Activar un entorno. Por ejemplo el entorno "django":&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source &lt;/span&gt;activate django
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Observa que ahora el nombre del entorno aparecerá entre paréntesis.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;django&lt;span class="o"&gt;)&lt;/span&gt;italo@italo-tosh:~&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Desactivar entorno django:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;django&lt;span class="o"&gt;)&lt;/span&gt;italo@italo-tosh:~&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source &lt;/span&gt;deactivate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Eliminar un entorno:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;conda remove -n nombredelentorno --all
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Clonar un entorno:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;conda create -n nombredelnuevo --clone nombredelquequieresclonar
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Instalar paquetes&lt;/h2&gt;
&lt;p&gt;Primero veamos los entornos que tenemos. Tenemos dos, el root (raíz) y django, que lo acabamos de crear.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;italo@italo-tosh:~&lt;span class="nv"&gt;$ &lt;/span&gt;conda info -e
&lt;span class="c"&gt;# conda environments:&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
django                   /home/italo/miniconda3/envs/django
root                  *  /home/italo/miniconda3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Instalando paquetes en el entorno root. Por ejemplo el paquete Scipy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;conda install scipy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Instalando paquetes en otro entorno:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;conda install -n mombredelentorno nombredelpaquete
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Instalando una versión específica. Por ejemplo: en el entorno de nombre myenv instalamos el paquete Scipy, versión 0.12.0&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;conda install -n myenv &lt;span class="nv"&gt;scipy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0.12.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Otra forma de instalar paquetes es activando el entorno y luego proceder con la instalación:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source &lt;/span&gt;activate nombredelentorno
&lt;span class="nv"&gt;$ &lt;/span&gt;conda install nombredelpaquete
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Listar los paquetes instalados. Si estamos en el entorno root (entorno “myenv” desactivado):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;conda list -n myenv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Si estamos en el entorno "myenv" (el entorno "myenv" está activado).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;conda list
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ver si un paquete ya está instalado:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;conda list -n myenv scipy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Comprobar si un paquete esta disponible para instalar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;conda search nombredelpaquete
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;O también:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;conda search &lt;span class="s2"&gt;&amp;quot;^django$&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Usar PIP para instalar otros paquetes&lt;/h2&gt;
&lt;p&gt;Anaconda incluye más de 190 paquetes pero puede pasar que el que desees no esté incluido en Anaconda. Entonces puedes hacer uso de PIP.&lt;/p&gt;
&lt;p&gt;Primero instala el paquete PIP (probablemente ya esté instalado), activa el entorno y luego usa los comandos de PIP.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;conda install -n nombredelentorno pip
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source &lt;/span&gt;activate nombredelentorno
&lt;span class="nv"&gt;$ &lt;/span&gt;pip install nombredelpaquete
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Con PIP puedes instalar librerías, crear un archivo de requerimientos, etc. &lt;/p&gt;
&lt;h2&gt;Más información&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pip.pypa.io/en/latest/reference/pip.html"&gt;Reference Guide PIP (2015)&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="http://soulchainer.github.io/posts/2013/12/30/python-paquetes-entornos-virtuales/"&gt;Entornos virtuales con PIP (2013)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://conda.pydata.org/docs/faq.html"&gt;Conda FAQ(2015)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://davebehnke.com/using-python-anaconda-distribution.html"&gt;Using the Anaconda Python Distribution(2014)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.python-guide.org/en/latest/dev/virtualenvs/#virtual-environments"&gt;Virtualenv Python Guide(2014)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Italo Farfán Vera</dc:creator><pubDate>Mon, 06 Apr 2015 21:07:00 +0200</pubDate><guid>tag:italofarve.github.io,2015-04-06:posts/2015/04/06/paquetes-python-con-anaconda.html</guid><category>herramientas</category></item><item><title>Inteligencia Artificial y Big Data</title><link>http://italofarve.github.io/posts/2015/03/03/inteligencia-artificial-y-big-data.html</link><description>&lt;p&gt;&lt;strong&gt;La Inteligencia Artificial&lt;/strong&gt; es un campo perteneciente a las Ciencias de la Computación cuyo objetivo es la creación de  software y/o hardware inteligente. Entendamos que cualquier sistema basado en hardware y software que pueda realizar exitosamente una tarea no trivial se dice que posee un grado de inteligencia artificial &lt;a class="footnote-reference" href="#id5" id="id1"&gt;[1]&lt;/a&gt;. Una actividad no trivial podría ser: la toma de decisiones financieras, pilotar un helicóptero, desarrollar nuevos productos, realizar un plan de mantenimiento predictivo de máquinas, etc.&lt;/p&gt;
&lt;p&gt;Algunas áreas de la Inteligencia Artificial son: teoría de juegos, procesamiento de lenguaje natural, visión por computador, sistemas expertos, búsqueda, reconocimiento de patrones y más.&lt;/p&gt;
&lt;p&gt;Cuando en Inteligencia Artificial hablamos de algoritmos genéticos, hablamos de algoritmos de búsqueda inspirados en la teoría de evolución. Un algoritmo es un proceso o conjunto de reglas que permite resolver de manera eficaz un problema. Mejores algoritmos serán eficientes, peores algoritmos sólo serán eficaces.&lt;/p&gt;
&lt;p&gt;La Inteligencia Artificial va de la mano del desarrollo tecnológico. Si bien es cierto, la Inteligencia Artificial emergió con fuerza en los 40s con la aparición de las  primeras computadoras electrónicas. A medida que la tecnología nos ha ido proporcionando mayor capacidad de procesamiento y almacenamiento, la Inteligencia Artificial ha ido cobrando mayor protagonismo en la solución de problemas complejos. En la actualidad hablamos de sistemas inteligentes capaces de realizar transacciones de compra y venta de acciones en tiempo real, asistentes virtuales de atención al consumidor, aplicaciones orientadas a la fidelización de clientes, etc.&lt;/p&gt;
&lt;p&gt;Incluso es muy probable que se haya aplicado la teoría de juegos en las negociaciones entre la Unión Europea y Grecia. La teoría de juegos busca predecir cuál será el resultado más probable en una negociación, ya sea entre personas, empresas o países, donde pueden estar en juego millones de euros. Debemos recordar que todo esto es posible gracias a que somos capaces de convertir en conocimiento la información que extraemos de los datos o del Big Data.&lt;/p&gt;
&lt;blockquote&gt;
&lt;img alt="Three main subcategories; machine learning, curated knowledge and reverse engineering the brain" class="align-center" src="http://italofarve.github.io/images/ia-tres.png" /&gt;
&lt;p&gt;Three main subcategories: machine learning, curated knowledge and reverse engineering the brain. Source: &lt;a class="reference external" href="https://www.inovancetech.com/buzzwords.html"&gt;https://www.inovancetech.com/buzzwords.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Cuando hablamos de Big Data&lt;/strong&gt; nos referimos a una gran cantidad de datos que sobrepasan las capacidades de procesamiento de las herramientas tradicionales. Podríamos hablar de muchos datos cuando sobrepasan los terabytes pero esto es relativo (recordemos que lo que es Big Data hoy no lo era hace cinco años).  Para saber si nos enfrentamos a una problema de big data tenemos que tener en cuenta el volumen (el tamaño de los datos), la velocidad (de llegada y procesamiento) y la variedad (datos de  registros web, audio, social media, sensores, etc) &lt;a class="footnote-reference" href="#id6" id="id2"&gt;[2]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En una organización los datos pueden venir de fuentes internas (por ejemplo: información de diferentes departamentos que incluyen costes, historial de clientes, stock, etc )  y de fuentes externas de información (por ejemplo: lo que dicen mis clientes en una red social). Esto para el sector retail y finanzas puede ser muy útil de cara al desarrollo de nuevos productos e identificación de tendencias.&lt;/p&gt;
&lt;p&gt;El sector minero también tiene la necesidad de analizar grandes volúmenes de datos, provenientes de tareas como la prospección, almacenado de información geológica y producción &lt;a class="footnote-reference" href="#id7" id="id3"&gt;[3]&lt;/a&gt;. Tratar los datos como un activo les permite: reducir los costes de mantenimiento y los tiempos no productivos de las máquinas, lo cual repercute positivamente en sus beneficios (hablamos de millones de dólares).&lt;/p&gt;
&lt;p&gt;Para realizar el procesamiento de grandes datos podemos hacer uso de procesamiento paralelo, donde muchas máquinas trabajan simultáneamente para resolver un problema, o de computación distribuida, donde distintos dispositivos independientes y conectados en red  colaboran para alcanzar una solución. MapReduce es una tecnología que da soporte a la computación paralela y Hadoop es otra tecnología disruptiva que da soporte a la computación distribuida. Además también es posible hacer uso de inteligencia artificial desde la nube.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;La computación en la nube&lt;/strong&gt; (cloud computing), el Big Data y la Inteligencia Artificial, juntas, nos permiten construir una ventana para mirar hacia atrás y adelante. Analizar los datos para simular que pasará o ver los posibles resultados al tomar una decisión es como mirar hacia el futuro, es lo que permite generar ventajas competitivas aunque también implica que las empresas se comprometan y adopten una cultura basada en los datos.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ahora veamos en un vídeo&lt;/strong&gt; un ejemplo producido por MIT Senseable City Lab con el BBVA &lt;a class="footnote-reference" href="#id8" id="id4"&gt;[4]&lt;/a&gt;.. Traducción de la descripción del vídeo: Una visualización de las transacciones bancarias en tiempo real que nos muestran los patrones de compra durante la Pascua de 2011 en España, y donde 1,4 millones de personas y 374.220 empresas gastaron € 232 millones. Observen que en las gráficas de la izquierda del vídeo aparecen patrones que se repiten como los picos en la compra de alimentos (línea azul) durante los días de vacaciones de Pascua. ¿Para la Pascua de 2012 se replicarán estos patrones de gasto? Si es así, podemos usar esta previsibilidad para mejorar los servicios urbanos y servir mejor a los habitantes de la ciudad?&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="youtube" align="center"&gt;&lt;iframe width="420" height="236" src="https://www.youtube.com/embed/8J3T3UjHbrE" frameborder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referencias&lt;/h2&gt;
&lt;table class="docutils footnote" frame="void" id="id5" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Frampton, M. (2014). Big Data Made Easy: A Working Guide to the Complete Hadoop Toolset. Apress. &lt;a class="reference external" href="http://proquest.safaribooksonline.com/book/databases/hadoop/9781484200940"&gt;Link de [1]:&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id6" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Neapolitan, R. E., &amp;amp; Jiang, X. (2012). Contemporary artificial intelligence. CRC Press. &lt;a class="reference external" href="http://proquest.safaribooksonline.com/book/programming/9781466573192"&gt;Link de [2]:&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id7" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Matías Gil (2012). La industria minera en búsqueda de la eficiencia con Big Data. América Economía. &lt;a class="reference external" href="http://www.americaeconomia.com/analisis-opinion/la-industria-minera-en-busqueda-de-la-eficiencia-con-big-data"&gt;Link de [3]:&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id8" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;MIT Senseable City Lab with BBVA (2012). SPRING SPREE — spending patterns in spain during easter 2011. &lt;a class="reference external" href="https://www.youtube.com/watch?v=8J3T3UjHbrE"&gt;Link de [4]:&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Italo Farfán Vera</dc:creator><pubDate>Tue, 03 Mar 2015 10:42:00 +0100</pubDate><guid>tag:italofarve.github.io,2015-03-03:posts/2015/03/03/inteligencia-artificial-y-big-data.html</guid><category>inteligencia artificial</category><category>big data</category></item><item><title>Mi blog con Pelican y Github</title><link>http://italofarve.github.io/posts/2015/03/01/mi-blog-con-pelican-y-github.html</link><description>&lt;p&gt;Hace un par de meses decidí mudar mi blog de Wordpress a Github (usando Pelican) por la flexibilidad y facilidad para insertar notebooks de ipython, líneas de código e incluso ejemplos con D3 para hacer visualización de datos. Para escribir los posts puedes usar Markdown o reStructuredText, es igual de fácil que escribir entradas con el editor de Wordpress o Blogger.&lt;/p&gt;
&lt;h2&gt;1. Ingredientes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Pelican: un generador de sitios estáticos construido con Python. Hay muchos más, me quede con Pelican por la comunidad activa (lo que significa: más documentación, plugins, plantillas).&lt;/li&gt;
&lt;li&gt;GitHub Pages: que permite alojar webs personales y de tus proyectos desde tu repositorio GitHub.&lt;/li&gt;
&lt;li&gt;Dominio propio: no es obligatorio. Si no lo tienes la url de tu blog será &lt;code&gt;tu-usuario.github.io&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;2. Configuración de GitHub Pages&lt;/h2&gt;
&lt;p&gt;Entra a  &lt;a href="http://github.com/"&gt;GitHub&lt;/a&gt; y crea un nuevo repositorio usando tu nombre de usuario, quedará de la forma: &lt;code&gt;tu-usuario.github.io&lt;/code&gt;.
&lt;img alt="Crear repositorio GitHub" src="http://italofarve.github.io/images/crear-repositorio.png" /&gt;&lt;/p&gt;
&lt;p&gt;En este nuevo repositorio se alojará el contenido de tu blog. También podrías haber seguido las instrucciones de &lt;a href="http://pages.github.com/"&gt;Github Pages&lt;/a&gt; para crear tu nuevo repositorio, pero sólo hasta el paso 1 (crear nuevo repositorio), ya que ellos te animarán a usar otro generador de sitios web, llamado Jekyll (que creo esta construido en Ruby).&lt;/p&gt;
&lt;p&gt;La dirección de tu nuevo repositorio será: &lt;code&gt;https://github.com/usuario/usuario.github.io&lt;/code&gt;. Mi repositorio con mi usuario &lt;em&gt;italofarfan&lt;/em&gt; quedo así:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Verificar repositorio GitHub" src="http://italofarve.github.io/images/verificar-repositorio.png" /&gt;&lt;/p&gt;
&lt;h2&gt;3. Instalación y configuración de Pelican&lt;/h2&gt;
&lt;p&gt;Hay que instalar Pelican y Markdown. Markdown es un lenguaje sencillo para generar contenido HTML sin necesidad de saber HTML. Pelican ya viene con  reStructuredText (reST) que también sirve para generar contenido HTML y es parte del proyecto Doctilus dentro de la comunidad de Python, sin embargo para Markdown existe un procesador amigable que te muestra los cambios mientras escribes y podría facilitarte las cosas. Yo por el momento uso los dos.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Haroopad -Escribiendo mi primer artículo" src="http://italofarve.github.io/images/haroopad.png" /&gt;&lt;/p&gt;
&lt;p&gt;Empecemos con la instalación. Abrimos un terminal (Crtl+ Alt + T) e instalamos &lt;a href="https://pip.pypa.io/en/latest/installing.html"&gt;PIP&lt;/a&gt; (un herramienta para instalar paquetes escritos en Python). Si ya lo tienes instalado salta al paso siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install python-pip
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Instalamos Pelican y Markdown:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install pelican markdown
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Crea una carpeta llamada, por ejemplo, &lt;code&gt;blog&lt;/code&gt;. Esta contendrá todo lo necesario para crear tu blog/web, dentro de ella ejecutaremos &lt;code&gt;pelican quickstart&lt;/code&gt;. Pelican por medio de un diálogo te ayudará con la configuración.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir blog
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;blog
&lt;span class="nv"&gt;$ &lt;/span&gt;pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Abajo puedes ver como respondi:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Where &lt;span class="k"&gt;do &lt;/span&gt;you want to create your new web site? &lt;span class="o"&gt;[&lt;/span&gt;.&lt;span class="o"&gt;]&lt;/span&gt;
What will be the title of this web site?
&amp;gt; Italo Farfán
Who will be the author of this web site?
&amp;gt; Italo Farfán Vera
What will be the default language of this web site? &lt;span class="o"&gt;[&lt;/span&gt;es&lt;span class="o"&gt;]&lt;/span&gt;
Do you want to specify a URL prefix? e.g., http://example.com   &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt; y
What is your URL prefix? &lt;span class="o"&gt;(&lt;/span&gt;see above example; no trailing slash&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt; http://italofarfan.github.io
Do you want to &lt;span class="nb"&gt;enable &lt;/span&gt;article pagination? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt; y
How many articles per page &lt;span class="k"&gt;do &lt;/span&gt;you want? &lt;span class="o"&gt;[&lt;/span&gt;10&lt;span class="o"&gt;]&lt;/span&gt;
Do you want to generate a Fabfile/Makefile to automate generation and publishing? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt; y
Do you want an auto-reload &amp;amp; simpleHTTP script to assist with theme and site development? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt; y
Do you want to upload your website using FTP? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt; n
Do you want to upload your website using SSH? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt; n
Do you want to upload your website using Dropbox? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt; n
Do you want to upload your website using S3? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt; n
Do you want to upload your website using Rackspace Cloud Files? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt;
&amp;gt; n
&amp;gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pelican creará la siguiente estructura de directorios:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;tree

├── Makefile
├── content
├── develop_server.sh
├── fabfile.py
├── output
├── pelicanconf.py
└── publishconf.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pelican asume que los artículos que escribirás los guardarás en la carpeta &lt;code&gt;content&lt;/code&gt;. Adicionalmente deberías crear dos nuevas carpetas.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir content/pages
&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir content/images
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;En pages podrás crear los archivos &lt;code&gt;about me&lt;/code&gt;, &lt;code&gt;contact&lt;/code&gt;, etc. Pelican los reconocerá sin problemas.&lt;/p&gt;
&lt;p&gt;Pelican convertirá tus artículos guardados en &lt;code&gt;content&lt;/code&gt; en html y los guardará en la carpeta &lt;code&gt;output&lt;/code&gt;. Más adelante comentaré cómo hacer para que tengan el siguiente estilo: midominio.com/2015/01/31/nombre-de-mi posts.html&lt;/p&gt;
&lt;p&gt;Es en &lt;code&gt;output&lt;/code&gt; donde se generará tu sitio web y es donde tendrás que colocar el archivo CNAME si deseas utilizar un dominio propio (tudominio.com). Más adelante hablaremos de ello.&lt;/p&gt;
&lt;h3&gt;Configurando nuestro repositorio GitHub&lt;/h3&gt;
&lt;p&gt;Tenemos que inicializar un repositorio github desde nuestra carpeta output y conectarlo con nuestro repositorio remoto creado anteriormente (usuario.github.io).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;output
&lt;span class="nv"&gt;$ &lt;/span&gt;git init
&lt;span class="nv"&gt;$ &lt;/span&gt;git remote add origin https://github.com/username/username.github.io.git
&lt;span class="nv"&gt;$ &lt;/span&gt;git add --all
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -m &lt;span class="s2"&gt;&amp;quot;commit message&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ya estás listo para publicar pero &lt;strong&gt;&lt;em&gt;*no todas las plantillas ofrecen soporte a todos los plugins&lt;/em&gt;&lt;/strong&gt;*. Por ejemplo Disqus, que permite integrar comentarios en tu blog, no funciona con la plantilla por defecto. La plantilla que usa Amy y la mía funcionan. &lt;a href="http://mathamy.com/migrating-to-github-pages-using-pelican.html"&gt;Amy Hanlon tiene una guía en inglés muy completa&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Plugins y plantillas&lt;/h3&gt;
&lt;p&gt;Yo estoy utilizando la plantilla pelican-bootstrap3 y el plugin Tipue Search para agregar el cuadro de búsqueda en la parte superior derecha. La plantilla es responsive.&lt;/p&gt;
&lt;p&gt;Para usarlas lo más rápido es clonar el repositorio plugins.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/getpelican/pelican-themes
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Y el repositorio plantillas al directorio que creaste, en mi caso el directorio "blog".&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/getpelican/pelican-plugins
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Luego tienes que abrir el archivo &lt;code&gt;pelicanconf.py&lt;/code&gt; e indicar la ruta donde se encuentran los plugins y el plugin que usarás. Agregar lo siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Plugins&lt;/span&gt;
&lt;span class="n"&gt;PLUGIN_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;pelican-plugins&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;tipue_search&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Indica la plantilla que usarás, en mi caso al usar la plantilla pelican-bootstrap3  la variable &lt;code&gt;THEME&lt;/code&gt; queda de la siguiente forma: pelican-themes/nombre-de-plantilla.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pelican-themes/pelican-bootstrap3&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Si aún te quedan dudas echa un vistazo &lt;a href="https://github.com/DandyDev/dandydev.net"&gt;al archivo pelicancof.py y publishconf.py de DandyDev creador de plantilla Booostrap3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Más información:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DandyDev/pelican-bootstrap3"&gt;Documentación de la plantilla Bootstrap3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mathamy.com/migrating-to-github-pages-using-pelican.html"&gt;Migrating to GitHub Pages using Pelican por Amy Hanlon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Agregando Disqus, Google Analytics y Addthis (botones para compartir)&lt;/h3&gt;
&lt;p&gt;Se supone que ya tienes una cuenta en estos servicios gratuitos.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Disqus: necesitas de un &lt;code&gt;short_name&lt;/code&gt;, para ello registra tu web: https://disqus.com/admin/create/ Indica el nombre de tu sitio (SITE NAME) y una DISQUS_URL. Este último será tu shortname. Finalmente obtendrás algo como esto: http://short_name.disqus.com/admin/settings&lt;/li&gt;
&lt;li&gt;AddThis: necesitas Profile ID, lo puedes crear desde settings: https://www.addthis.com/settings/publisher&lt;/li&gt;
&lt;li&gt;Google Analytics: necesitas de un "identificador", si no lo tienes, entra a Google Analytics y crea una nueva propiedad. Desde Admin/Property obtendrás un identificador de la forma: UA-XXXX-YYYY&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ahora agrega las siguientes líneas en &lt;code&gt;pelicanconf.py&lt;/code&gt; y &lt;code&gt;publishconf.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tu_short_name&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;GOOGLE_ANALYTICS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;UA-XXXXXX-1&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;ADDTHIS_PROFILE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;ra-XXXXXXXXXXXXXXXX&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Más información en:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://querbalken.net/howto-setup-comments-with-disqus-in-pelican-en.html"&gt;Howto Setup Comments with Disqus in Pelican&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;4. Configurando dominio propio&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Crea un archivo &lt;code&gt;CNAME&lt;/code&gt; y dentro escribe tu dominio, por ejemplo: tudominio.com&lt;/li&gt;
&lt;li&gt;Guarda el archivo &lt;code&gt;CNAME&lt;/code&gt; en la carpeta output&lt;/li&gt;
&lt;li&gt;Entra al panel de control de tu proveedor de dominio y crea un registro CNAME que apunte a tu_usuario.github.io o un registro A añadiendo las IP &lt;code&gt;192.30.252.153&lt;/code&gt; y &lt;code&gt;192.30.252.154&lt;/code&gt;. En mi caso Strato solo me déjo agregar un IP e igual funciona.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Más info:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/tips-for-configuring-a-cname-record-with-your-dns-provider/"&gt;Ayuda de Github para crear un registro CNAME&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/tips-for-configuring-an-a-record-with-your-dns-provider/"&gt;Ayuda de Github para crear un registro A&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;5. Escribiendo posts con reST y Md.&lt;/h2&gt;
&lt;p&gt;Creamos un archivo con la extensión &lt;code&gt;.rst&lt;/code&gt; o &lt;code&gt;.md&lt;/code&gt; y lo guardamos en la carpeta &lt;code&gt;content&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Ejemplo en reStructuredTex&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Mi&lt;/span&gt; &lt;span class="n"&gt;primer&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;
&lt;span class="cp"&gt;##############&lt;/span&gt;

&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;03&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;43&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;prueba&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;mi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;primer&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;TuNombre&lt;/span&gt;
&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Versi&lt;/span&gt;&lt;span class="err"&gt;ó&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;corta&lt;/span&gt; &lt;span class="n"&gt;para&lt;/span&gt; &lt;span class="n"&gt;el&lt;/span&gt; &lt;span class="err"&gt;í&lt;/span&gt;&lt;span class="n"&gt;ndice&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="n"&gt;feeds&lt;/span&gt;

&lt;span class="n"&gt;Escribe&lt;/span&gt; &lt;span class="n"&gt;aqu&lt;/span&gt;&lt;span class="err"&gt;í&lt;/span&gt; &lt;span class="n"&gt;el&lt;/span&gt; &lt;span class="n"&gt;contenido&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;tu&lt;/span&gt; &lt;span class="n"&gt;primer&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Ejemplo en Markdown&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;thats&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;awesome&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yeah&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;
&lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Alexis&lt;/span&gt; &lt;span class="n"&gt;Metaireau&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Short&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;feeds&lt;/span&gt;

&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para escribir post con Markdown estoy usando &lt;a href="http://pad.haroopress.com/user.html"&gt;Haroopress&lt;/a&gt; que desde el Menu/Insert tienes todos los comandos necesarios. Y para reStructuredText estoy usando SublimeText.&lt;/p&gt;
&lt;h3&gt;Automatizando la creación de archivos&lt;/h3&gt;
&lt;p&gt;Para poder crear más rápido los posts podemos hacer uso de un script que deberás guardar en el directorio principal (&lt;code&gt;blog&lt;/code&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;reStructuredText: &lt;code&gt;make_entry.py&lt;/code&gt;, de &lt;a href="http://nafiulis.me/making-a-static-blog-with-pelican.html#automation"&gt;Nafiul Islam&lt;/a&gt;. &lt;a href="https://github.com/italofarfan/blog/blob/master/make_entry.py"&gt;Descárgalo aquí&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Markdown: &lt;code&gt;make_entrymd.py&lt;/code&gt;, modifiqué el archivo para que funcione con md. &lt;a href="https://github.com/italofarfan/blog/blob/master/make_entrymd.py"&gt;Descárgalo aquí&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para ejecutarlo nos ubicamos en el directorio principal, reemplaza "nueva entrada" por el nombre que desees:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="nv"&gt;$ &lt;/span&gt;python make_entrymd.py &lt;span class="s2"&gt;&amp;quot;Nueva Entrada&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El resultado será:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;File created -&amp;gt; content/2015_02_31_nueva-entrada.md
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se creará un archivo similar al siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Nueva&lt;/span&gt; &lt;span class="n"&gt;Entrada&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; 
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; 
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;nueva&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;entrada&lt;/span&gt;
&lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; 
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; 
&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;draft&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El status &lt;code&gt;draft&lt;/code&gt; te permite crear artículos en estado borrador. Muy útil si aún no deseas publicar o quieres que otra persona ĺo revise. Pelican no mostrará tu artículo hasta que  borres la línea &lt;code&gt;status: draft&lt;/code&gt; o la cambies por &lt;code&gt;status: published&lt;/code&gt; . Hasta entonces lo guardará en la carpeta &lt;code&gt;drafts&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Posts con la forma: /año/mes/dia/nombre-post.html&lt;/h3&gt;
&lt;p&gt;Si deseas que tus posts tengan la forma mi_usuario.github.io/2015/03/10/primera-entrada.html tendremos que agregar en el archivo &lt;code&gt;pelicanconf.py&lt;/code&gt; lo siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Formating URLs&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;{date:%Y}/{date:%m}/{date:&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;}/{slug}.html&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;{date:%Y}/{date:%m}/{date:&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;}/{slug}.html&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;5. Generando tu blog&lt;/h2&gt;
&lt;p&gt;Ahora ya tienes tienes escrito tu primer artículo toca generar tu web desde el directorio principal (blog):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;blog
&lt;span class="nv"&gt;$ &lt;/span&gt;make devserver
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Puedes ver los cambios en tu blog entrando en: http://localhost:8000 &lt;/p&gt;
&lt;p&gt;Y para salir escribe:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;make stopserver
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Empuja los cambios a tu repositorio&lt;/h4&gt;
&lt;p&gt;Ahora toca alojar tu blog en tu repositorio remoto GitHub. Recuerda hacerlo desde la carpeta output.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;output
&lt;span class="nv"&gt;$ &lt;/span&gt;git add --all
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -m &lt;span class="s2"&gt;&amp;quot;commit message&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Y eso es todo, ya sabes todo lo necesario para mantener tu blog ;)&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;6. Comandos extras en caso de accidentes&lt;/h2&gt;
&lt;h4&gt;Inicializar repositorio&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;output
&lt;span class="nv"&gt;$ &lt;/span&gt;git init
&lt;span class="nv"&gt;$ &lt;/span&gt;git remote add origin https://github.com/username/username.github.io.git
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Restaurar repositorio&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;blog
&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/username/username.github.io.git output
&lt;span class="nv"&gt;$ &lt;/span&gt;pelican content
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;output
&lt;span class="nv"&gt;$ &lt;/span&gt;git add --all
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -m &lt;span class="s2"&gt;&amp;quot;commit message&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;7. Referencias&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DandyDev/dandydev.net"&gt;Archivo pelicancof.py y publishconf.py del blog de DandyDev, creador de plantilla Booostrap3&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet"&gt;Cheat Sheet para Markdown&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mathamy.com/migrating-to-github-pages-using-pelican.html"&gt;Amy Hanlon, Migrating to Github Pages using Pelican&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en/3.1.1/getting_started.html#installing-pelican"&gt;Documentación de Pelican - Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DandyDev/pelican-bootstrap3"&gt;Pelican Boostrap3 Theme&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Italo Farfán Vera</dc:creator><pubDate>Sun, 01 Mar 2015 11:46:00 +0100</pubDate><guid>tag:italofarve.github.io,2015-03-01:posts/2015/03/01/mi-blog-con-pelican-y-github.html</guid><category>python</category><category>pelican</category></item></channel></rss>